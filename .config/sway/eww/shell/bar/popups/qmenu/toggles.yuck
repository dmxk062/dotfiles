(defpoll service-swayidle :interval "20m" "pgrep swayidle >/dev/null && echo true || echo false")
(defpoll look-nightlight :interval "10m" "pgrep gammastep >/dev/null && echo true || echo false")
(defvar nightlight-strengh 3000)
(defpoll look-islight :interval "10m" "./bin/color.sh get")

(defpoll cpu-governor :interval "20m" "cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor")

(defvar cpu-governor-names '{
"performance": "󰓅   Performance",
"powersave": "󰾆   Efficiency"
}')

(defwidget toggle-panel [] 
    (box :space-evenly false :orientation "vertical"
        (box
            (button :class "cbutton ${look-nightlight ? "active" : ""}"
                :onclick "killall gammastep && ${EWW_CMD} update look-nightlight=false || { ${EWW_CMD} update look-nightlight=true; gammastep -O ${nightlight-strengh}& }"
                "${look-nightlight ? "󰖔" : ""}   Nightlight")
            (button :class "cbutton"
                :onclick "./bin/color.sh"
                :timeout "128s"
                "${look-islight ? "" : "󰖔"}   Colorscheme"))
        
        (box
            (button :class "cbutton ${service-swayidle ? "active" : ""}"
                :onclick "killall swayidle && ${EWW_CMD} update service-swayidle=false || { ${EWW_CMD} update service-swayidle=true; swayidle -w& }"
                "${service-swayidle ? "󰒲" : "󰒳"}   Swayidle")

            
            (box :class "dual-cbutton${cpu-governor == "performance" ? " active" : ""}" :space-evenly false
                (button :hexpand true
                    :onclick "./bin/cpu_governor.sh ${cpu-governor == "performance" ? "powersave" : "performance"}; ${EWW_CMD} update cpu-governor=$(< /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor)"
                    :onrightclick "${EWW_CMD} update perf-revealed=${!perf-revealed}"
                    :timeout "16s"
                    {cpu-governor-names[cpu-governor]})
                (button 
                    :onclick "${EWW_CMD} update perf-revealed=${!perf-revealed}"
                    {perf-revealed ? "" : "" })))))

(defpoll service-blueman :run-while perf-revealed :interval "20m"
    "pgrep blueman-applet >/dev/null && echo true || echo false")
(defpoll service-networkmanager :run-while perf-revealed :interval "20m"
    "pgrep nm-applet >/dev/null && echo true || echo false")
(defpoll service-fcitx5 :run-while perf-revealed :interval "20m"
    "pgrep fcitx5 >/dev/null && echo true || echo false")
(defpoll service-autotile :run-while perf-revealed :interval "20m"
    `pgrep -f 'python.*layout.py' -d " "`)

(defwidget tray-processes []
    (box :space-evenly false :orientation "vertical"
        (box
            (button :class "cbutton ${service-blueman ? "active" : ""}"
                :onclick "killall blueman-applet && ${EWW_CMD} update service-blueman=false || { ${EWW_CMD} update service-blueman=true; blueman-applet& }"
                "${service-blueman ? "" : ""}   Blueman Applet")
            (button :class "cbutton ${service-networkmanager ? "active" : ""}"
                :onclick "killall nm-applet && ${EWW_CMD} update service-networkmanager=false || { ${EWW_CMD} update service-networkmanager=true; nm-applet& }"
                "${service-networkmanager ? "" : ""}   NM Applet"))
        (box 
            (button :class "cbutton ${service-fcitx5 ? "active" : ""}"
                :onclick "killall fcitx5 && ${EWW_CMD} update service-fcitx5=false || { ${EWW_CMD} update service-fcitx5=true; fcitx5& }"
                "${service-fcitx5 ? "" : ""}   fcitx5 IME")
            (button :class "cbutton ${service-autotile != "" ? "active" : ""}"
                :timeout "128s"
                :onclick `kill ${service-autotile} && ${EWW_CMD} update service-autotile="" || { ~/.config/sway/scripts/layout.py& ${EWW_CMD} update service-autotile=$!; }`
                {service-autotile != "" ? "󰙀    Autotiling" : "󰆾    Manual Tiling"}))))
