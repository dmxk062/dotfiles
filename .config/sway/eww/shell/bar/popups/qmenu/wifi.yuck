(deflisten wifi :initial '{"powered":false, "connected":false,"ssid":"","security":"","signal":0}' "./bin/wifi.sh listen")
(defvar wifi-searching false)
(defvar wifi-connecting false)
(defpoll wifis :interval "8s" "./bin/wifi.sh list")

(defwidget wifi-icon [signal security active ?text ?width]
    (label :limit-width {width?:100} :text "${!active ? "󰤭" 
            : (security != "" ? (signal > 80 ? "󱛎"
                : (signal > 60 ? "󱛍"
                : (signal > 40 ? "󱛌" 
                : (signal > 20 ? "󱛋" : "󱛏"))))
            : (signal > 80 ? "󰤨"
                : (signal > 60 ? "󰤥"
                : (signal > 40 ? "󰤢"
                : (signal > 20 ? "󰤟" : "󰤯")))))}${text?:""}"))

(defwidget wifi-toggle-button []
    (box :class "cbutton${(wifi?.powered?:false) ? " active" : ""}" :space-evenly false
        (button :hexpand true 
            :onclick "nmcli radio wifi ${wifi.powered ? "off" : "on"}"
            :timeout "16s"
            (box :halign "center" (box :space-evenly false
                (wifi-icon 
                    :active {(wifi?.powered?:false) && (wifi?.connected?:false)} 
                    :signal {wifi?.signal?:0} 
                    :security {wifi?.security?:""}
                    :text "   ${(wifi.powered && wifi.connected)? wifi.ssid : "WiFi"}"
                    :width 12))))
        (button 
            :onclick "${EWW_CMD} update wifi-revealed=${!wifi-revealed}" 
            {wifi-revealed ? "" : "" })))

(defwidget wifi-panel []
    (box :space-evenly false :class "section" :orientation "vertical"
        (box :space-evenly false
            (button 
                :class "sbutton${wifi-searching ? " active" : ""}" 
                :onclick "bin/wifi.sh upd&"
                {wifi-searching ? "   Searching..." : "󰐷   Search"}))
    (scroll :style "min-height: 26rem;" :vscroll true :hexpand true (box :orientation "vertical" :hexpand true :space-evenly false
        (for net in wifis
            (box :hexpand true :space-evenly false :halign "center"
                (box :orientation "vertical" :space-evenly false :class "card" :style "min-width: 20rem;"
                    (box :space-evenly false
                        (box :hexpand true :halign "start" (circular-progress :thickness 6 :value {net.signal} :class "wifi-circle"
                            (wifi-icon :signal {net.signal} :security {net.security} :active true)))
                        (box :orientation "vertical" :style "margin-right: 1rem;"
                            (label :class "title" :text {net.ssid} :limit-width 16)
                            (label :class "text" :text {net.security} :limit-width 16)))
                    (box :space-evenly false :halign "end"
                        (button 
                            :class "sbutton${net.ssid == wifi.ssid ? " alert" : ""}" 
                            :onclick "${net.ssid == wifi.ssid ? "nmcli connection down '${net.ssid}'" : "bin/wifi.sh connect '${net.ssid}' ${net.security}"}; bin/wifi.sh upd"
                            :timeout "128s"
                            {net.ssid == wifi.ssid ? "Disconnect" : "Connect"})))))))))
