(defvar recording false)
(defvar recording-info '{"start": 0, "pid": 0, "path": ""}')
(defvar bat-discharging '[ "󰂎", "󰁺", "󰁻", "󰁼", "󰁽", "󰁾", "󰁿", "󰂀", "󰂁", "󰂂", "󰁹" ]' )
(defvar bat-charging '[ "󰢟", "󰢜", "󰂆", "󰂇", "󰂈", "󰢝", "󰂉", "󰢞", "󰂊", "󰂋", "󰂅" ]' )

(defwidget status-battery [bat]
    (revealer :reveal {bat.capacity >= 0} :visible {bat.capacity >= 0}
            (label :style "margin-left: .5rem;"
                :class {bat.capacity < 20 ? "red" : ""}
                :text "${bat.status == "Discharging" ? (bat-discharging[(bat.capacity - bat.capacity % 10)/10]) : (bat-charging[(bat.capacity - bat.capacity % 10)/10])}  ${bat.capacity}%")))

(defwidget status []
    (box :class "button" :space-evenly false :spacing 8
        (button
            :onclick "pamixer -t"
            :tooltip "${audio.out.name}: ${audio.out.vol}%"
            {audio.out.mute ? "󰸈" 
                : (audio.out.vol > 70 ? "󰕾" : (audio.out.vol > 20 ? "󰖀" : "󰕿"))})
        (button 
            :onclick "pamixer -t --default-source"
            :tooltip "${audio.in.name}: ${audio.in.vol}%"
            {audio.in.mute ? "󰍭" : "󰍬"})
        (label
            :text {bt-meta.powered ? "󰂯" : "󰂲"})
        (label 
            :tooltip "${vpn.active ? "Connected via `${vpn.name}`" : "No VPN active"}"
            :text {vpn.active ? "󰒄" : "󰀑"})
        (label
            :visible {wifi.powered}
            :tooltip {wifi.connected ? "Connected to ${wifi.ssid}" : "No Connection"}
            :text {wifi.connected ? (wifi.signal > 80 ? "󱛎"
            : (wifi.signal > 80 ? "󰤨"
                : (wifi.signal > 60 ? "󰤥"
                : (wifi.signal > 40 ? "󰤢"
                : (wifi.signal > 20 ? "󰤟" : "󰤯"))))) : "󰤯"})
        (status-battery :bat {EWW_BATTERY?.["BAT0"]?: `{"status": "Discharging", "capacity": -1}`})
        
        (revealer :reveal recording :transition "slideright" :visible recording
            (button :class "red" :style "min-width: 4rem; margin-left: .5rem;"
                :onclick "kill ${recording-info.pid}"
                :tooltip "Recording to ${recording-info.path}"
                "󰑊  ${formattime(EWW_TIME - recording-info.start, "%M:%S", "UTC")}"))))
