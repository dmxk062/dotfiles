(defpoll perf-mem :interval "8s" "./bar/bin/mem.awk /proc/meminfo") ; easier for formatting than the builtin
(deflisten perf-net "./bar/bin/net.sh")
(deflisten perf-gpu "./bar/bin/gpu.sh")

(defvar gpu-sensor "AMDGPU_JUNCTION")
(defvar cpu-sensor "ASUSEC_CPU")

(defwidget performance []
    (box :space-evenly false
        (revealer 
            :reveal perf-show
            :transition "slideright"
            :duration "200ms"
            (box :space-evenly false
                (label 
                    :class "perf-net"
                    :text "recv: ${perf-net.received}B/s,  send: ${perf-net.sent}B/s") 
                (label 
                    :class "perf-${EWW_TEMPS[gpu-sensor] < 50 ? "cool" : (EWW_TEMPS[gpu-sensor] < 60 ? "warm" : "hot")}"
                    :text "gpu: ${perf-gpu.mem_used} / ${perf-gpu.mem_total} [${perf-gpu.usage}% @ ${EWW_TEMPS[gpu-sensor]}°C]")
                (label 
                    :class "perf-${EWW_TEMPS[cpu-sensor] < 50 ? "cool" : (EWW_TEMPS[cpu-sensor] < 60 ? "warm" : "hot")}"
                    :text "cpu: ${perf-mem.used} / ${perf-mem.total} [${round(EWW_CPU.avg, 1)}% @ ${EWW_TEMPS[cpu-sensor]}°C]")))
        (button 
            :class "button"
            :onclick "${EWW_CMD} update perf-show=${!perf-show}"
            "${(perf-net.raw_sent?:0) > 0 ? "s" : ""}${(perf-net.raw_received?:0) > 0 ? "r" : ""}  ${round(EWW_RAM.used_mem_perc, 1)}% mem")))
