(defvar service_idle true)
(defvar service_clocks false)
(defvar service_blueman false)
(defvar service_nm false)
(defvar hide-notif-popups false)

(defvar dock true)
(defvar bar true)
(defvar popups true)
(defvar rightclick true)


(defvar system '{}')

(defwidget system_section []
    (box :visible "${selected_section == 3}" :class "section_box" :hexpand true :orientation "h" :space-evenly false  :vexpand true
        (box :orientation "h" :space-evenly false :class "sidebar" 
        (scroll :class "scroll-thin"
            (box :orientation "v" :space-evenly false
                (label :class "title" :text "Background Processes")
                (list_box
                    (button :class "button${service_blueman ? "-active" : ""}" :timeout "16s" :onclick "bin/sys/service.sh blueman" "󰂯    Blueman")
                    (wrapped_text :text "Control bluetooth devices via the system tray. Also receive notifications on connections")
                )
                (list_box
                    (button :class "button${service_nm ? "-active" : ""}" :timeout "16s" :onclick "bin/sys/service.sh network" "󰌘    Network Manager")
                    (wrapped_text :text "Manage network devices, WIFI, ethernet and VPNs from the system tray. Also sends notifications on events")
                )
                ;; (list_box
                ;;     (button :class "button${obs_tray ? "-active" : ""}" :timeout "16s" :onclick "bin/tray.sh obs" "󰑋    OBS")
                ;;     (wrapped_text :text "Let OBS run in the system tray so it's always available when you need to quickly record something")
                ;; )
                (list_box
                    (button :class "button${service_idle ? "-active" : ""}" :onclick "bin/sys/service.sh idle" "󰒲    Swayidle")
                    (wrapped_text :text "Swayidle invokes actions after periods of inactivity")
                )
                (list_box
                    (button :class "button${service_clocks ? "-active" : ""}" :onclick "bin/sys/service.sh clock" "󰥔    GNOME Clocks")
                    (wrapped_text :text "Let Gnome Clocks run in the background so alarms can be triggered")
                )
            )
        )
        (separator)
        (scroll :class "scroll-thin"
            (box :orientation "v" :space-evenly false 
                (label :class "title" :text "EWW Shell")
                (list_box
                    (button :class "button${dock ? "-active" : ""}" :onclick "bin/sys/eww_shell.sh dock" "󱂩    Dock")
                    (wrapped_text :text "A dock to launch apps. Hover over the bottom screen edge to activate.")
                )
                (list_box
                    (button :class "button${bar ? "-active" : ""}" :onclick "bin/sys/eww_shell.sh bar""󱔓    Bar")
                    (wrapped_text :wrap true :text "A bar at the top of the screen showing workspaces, windows, media and other information")
                )
                (list_box
                    (button :class "button${rightclick ? "-active" : ""}" :onclick "bin/sys/eww_shell.sh desktop""󰍜    Desktop Menu")
                    (wrapped_text :wrap true :text "A desktop context menu activated by right clicking on the desktop")
                )
                (list_box
                    (button :class "button${popups ? "-active" : ""}" :onclick "bin/sys/eww_shell.sh popups""󰍦    Popups")
                    (wrapped_text :text "On screen popups for volume and brightness changes")
                )
                (list_box
                    (button :class "button${hide-notif-popups ? "" : "-active"}" :timeout "16s" :onclick "bin/notif.sh toggle-mode" "${hide-notif-popups ? "󱙍" : "󰍡"}    Notification Popups")
                    (wrapped_text :text "Notification popups sent by mako, when disabled the notification center can still be used")
                )
            )
        )
        )
        (box :orientation "h" :hexpand true :halign "center" 
            (box :space-evenly false :halign "center" :orientation "v" :valign "center"
                (box :space-evenly false :orientation "v" :class "card" 
                    (box :class "padding_box"
                        (image :path "${icon_theme}/${system.logo.distro}" :image-width 256 :image-height 256)
                    )
                    (box :orientation "v" :halign "start" :space-evenly false :class "card_footer" 
                    (box :halign "start")
                        (label :class "text-large" :text "Operating System: ${system.distro}")
                        (label :class "text-large" :text "Kernel: ${system.kernel} ")
                        (label :class "text-large" :text "Version: ${system.kernel_ver} ")
                        (label :class "text-large" :text "Windowing System: ${system.windowing_system}")
                        (label :class "text-large" :text "${system.windowing_system == "x11" ? "Window Manager" : "Compositor"}: ${system.desktop}")
                        (label :class "text-large" :text "Memory: ${system.ram}")
                        (label :class "text-large" :text "CPU Vendor: ${system.cpu_vendor}")
                        (label :class "text-large" :text "CPU Model: ${system.cpu_model}")
                        (label :class "text-large" :text "CPU Instruction Set Architecture: ${system.arch}")
                        (label :class "text-large" :text "Uptime: ${formattime(EWW_TIME - system.boottime - 3600, "%T")}, since ${formattime(system.boottime, "%H:%M")}")
                    )
                )


            )
        )
    )   
)

