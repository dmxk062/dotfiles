(defvar disks "[]")
(defvar selected_part "")
(defvar selected_part_disk "")
(defvar disk_info "")
(defvar disk_parts "")
(defvar crypt_passwd "")
(defvar hide_crypt_passwd true)


(defvar disk_decrypt_error false)
(defvar disk_encrypt_error false)
(defvar disk_mount_error false)
(defvar disk_unmount_error false)
(defvar disk_eject_error false)



(defwidget copy_text [text info] 
    (eventbox :class "copy" :onclick "wl-copy ${text}& disown" :cursor "pointer" :tooltip "Click to Copy" (label :limit-width 24 :text "${info} ${text}"))
)

(defwidget storage_section []
    (box :visible "${selected_section == 7}" :class "section_box" :hexpand true :orientation "h" :space-evenly false
        (box :orientation "h" :space-evenly false :class "sidebar"
            (box :orientation "v" :space-evenly false
                (box :class "padding_box" :orientation "v" :space-evenly false
                    (label :class "title" :text "Utilities")
                    (box
                        (button :class "button" :timeout "16s" :onclick "bin/suspend.sh gnome-disks" "󰋊    Disk Utility")
                        (button :class "button" :timeout "16s" :onclick "bin/disks.sh upd" "󰑓    Reload")
                    )
                )
                (label :class "title" :text "Devices")
                (scroll :class "scroll-disks"
                (box :orientation "v" :space-evenly false 
                    (for disk in disks
                        (overlay
                            (box :orientation "v" :space-evenly false :class "card"
                                (box :class "padding_box" :space-evenly false :orientation "v"
                                    (icon :name "${disk.icon_g}")
                                    (label :class "heading" :text "${disk.device.model?:disk.path}")
                                )
                                (box :orientation "v" :space-evenly false :class "card_footer"
                                    (centerbox :space-evenly false
                                        (box :space-evenly false :halign "start"
                                            (button :class "button" :visible "${disk.hotplug}" :timeout "128s" :onclick "bin/disks.sh eject ${disk.path}&&bin/disks.sh upd" "   Eject")
                                        )
                                        (box :space-evenly false :halign "center"
                                            (button :class "button${selected_part_disk == disk.path ? "-active" : ""}" :onclick "${arraylength(disk.partitions) == 1 ? "${EWW_CMD} update selected_part=${disk.partitions[0].partuuid}&&${EWW_CMD} update selected_part_disk=${disk.path}" : "${EWW_CMD} update disk_parts=${disk.path}"}" "${arraylength(disk.partitions?: '[]')} partition${arraylength(disk.partitions?: '[]') == 1 ? "" : "s"}")
                                        )
                                        (box :space-evenly false :halign "end"
                                            (button :class "button" :onclick "${EWW_CMD} update disk_info=${disk.path}" "󰋼")
                                        )
                                    )
                                )
                            )
                            (overlay
                                (box :orientation "v" :space-evenly false :class "card-no_shadow" :visible "${disk_info == disk.path}"
                                    (box :class "padding_box" :vexpand true
                                        (scroll :class "mini-scroll"
                                            (box :orientation "v" :space-evenly false :halign "start"
                                                (lwrapped_text :text "Manufacturer: ${disk.device.vendor?: "Not known"}")
                                                (lwrapped_text :text "Model: ${disk.device.model?: "Not known"}")
                                                (lwrapped_text :text "Connected via: ${disk.device.transport?: "Virtual device"}")
                                                (lwrapped_text :text "Hotplug: ${disk.hotplug ? "Yes" : "No"}")
                                                (lwrapped_text :text "Type: ${disk.zram ? "Zram - Virtual swap device" :
                                                (disk.device.transport == "sata" ? "Serial ATA (SATA) Disk" :
                                                (disk.device.transport == "nvme" ? "NVME PCIE SSD" :
                                                (disk.device.transport == "mmc" ? "MMC/SD Storage Card" :
                                                (disk.device.transport == "usb" ? "USB Mass Storage Device" :
                                                (disk.device.transport == "scsi" ? "SCSI Disk" : (matches(disk.name,".*loop.*") ? "Loop device" : "Unknown Device Type" ))))))}")
                                            )
                                        )
                                        
                                    )
                                    (box :class "card_footer" :space-evenly false
                                        (box :hexpand true :space-evenly false
                                            (button :class "button" :onclick "wl-copy ${disk.path}" "󰅇    Copy path to clipboard")
                                        )
                                        (button :class "button" :onclick "${EWW_CMD} update disk_info=''" "Close")
                                    )

                                )
                                (box :orientation "v" :space-evenly false :class "card-no_shadow" :visible "${disk_parts == disk.path}"
                                    (box :class "padding_box" :vexpand true
                                            (box :orientation "v" :space-evenly false :valign "center"
                                                (box :space-evenly false
                                                    (for part in "${disk.partitions}"
                                                        (button :class "button${selected_part == part.partuuid ? "-active" : ""}" :timeout "16s" :onclick "${EWW_CMD} update selected_part=${part.partuuid}&&${EWW_CMD} update selected_part_disk=${disk.path}" "${part.label?:part.name}")
                                                    )
                                                )
                                            )
                                        ;; )
                                    )
                                    (box :class "card_footer" :space-evenly false
                                        (box :hexpand true :space-evenly false
                                        )
                                        (button :class "button" :onclick "${EWW_CMD} update disk_parts=''" "Close")
                                    )
                                )
                        )
                        )

                    )
                )
                )
            )
        )
        (box :space-evenly false :hexpand true :halign "center"
            (for disk in disks
                (box :space-evenly false :orientation "v" :valign "center"
                    (for part in "${disk.partitions}"
                        (box :space-evenly false
                        (box :orientation "v" :visible "${selected_part == part.partuuid && ! part.crypt}" :space-evenly false :class "card"
                                (box :class "padding_box" :orientation "v" :space-evenly false
                                    (label :class "heading" :text "${part.label?:part.name}")
                                    (label :class "text-large" :text "Filesystem: ${part.type}")
                                    (label :class "text-large" :text "Filesystem Type: ${part.parttype}")
                                    (box :class "padding_box" :visible "${part.type != "swap"}"
                                        (overlay
                                            (scale :value "${part.usage.perc?: 0}" :class "slider-thick" :active false )
                                            (label :class "text-large dark" :text "${part.mounted ? "${part.usage.used} / ${part.usage.size}" : "Mount to see disk usage"}")
                                        )
                                    )
                                    (box :visible "${part.mount[0] != 'null' && part.type != "swap"}" :orientation "v" :space-evenly false
                                        (label :class "title" :text "Mountpoints")
                                        (for mount in "${part.mount?: '[]'}"
                                            (path_button :path "${mount}" :text "${mount}" :type "dir")
                                        )
                                    )
                                )
                                (box :class "card_footer" :orientation "v" :space-evenly false
                                    (box
                                        (button :class "button${part.mounted ? "-active" : ""}" :timeout "16s" 
                                        :onclick "${part.mounted ? 
                                        "bin/disks.sh unmount ${part.path} ${part.type == "swap" ? "swap" : ""};bin/disks.sh upd" :
                                        "bin/disks.sh mount ${part.path} ${part.type == "swap" ? "swap" : ""};bin/disks.sh upd"}" "${part.mounted ? "Unmount" : "Mount"}"
                                        )
                                    )
                                )
                            )
                        (overlay :visible "${selected_part == part.partuuid && part.crypt}"
                            (box :orientation "v" :space-evenly false :class "card"
                                (box :class "padding_box" :orientation "v" :space-evenly false
                                    (label :class "heading" :text "${part.decrypt.label?:part.decrypt.name}")
                                    (label :class "text-large" :text "Filesystem: ${part.decrypt.type}")
                                    (label :class "text-large" :text "Filesystem Type: LUKS Encrypted Partition")
                                    (box :class "padding_box"
                                        (overlay
                                            (scale :value "${part.decrypt.usage.perc?: 0}" :class "slider-thick" :active false )
                                            (label :class "text-large dark" :text "${part.decrypt.mounted ? "${part.decrypt.usage.used} / ${part.decrypt.usage.size}" : "Mount to see disk usage"}")
                                        )
                                    )
                                    (box :visible "${part.decrypt.mount[0] != 'null'}" :orientation "v" :space-evenly false
                                        (label :class "title" :text "Mountpoints")
                                        (for mount in "${part.decrypt.mount?: '[]'}"
                                            (path_button :path "${mount}" :text "${mount}" :type "dir")
                                        )
                                    )
                                )
                                (box :class "card_footer" :orientation "v" :space-evenly false
                                    (box
                                        (button :class "button${part.mounted ? "-active" : ""}" :timeout "16s" 
                                        :onclick "${part.mounted ? 
                                        "bin/disks.sh unmount ${part.decrypt.path};bin/disks.sh upd" :
                                        "bin/disks.sh mount ${part.decrypt.path};bin/disks.sh upd"}" "${part.mounted ? "Unmount" : "Mount"}"
                                        )
                                        (button :class "button" :onclick "bin/disks.sh encrypt ${part.path}" "󰌾    Lock")
                                    )
                                )
                            )
                            (box :orientation "v" :space-evenly false :class "card-no_shadow" :visible "${part.decrypt == 'null'}"
                                (box :class "padding_box" :orientation "v" :space-evenly false :vexpand true
                                    (label :class "heading" :text "${part.name} is locked")
                                    (box :space-evenly false :halign "center"
                                       (button :class "button${hide_crypt_passwd ? "" : "-active"}" :onclick "${EWW_CMD} update hide_crypt_passwd=${!hide_crypt_passwd}" "${hide_crypt_passwd ? "󰈉" : "󰈈"}") 
                                       (input :class "input" :timeout "128s" :password "${hide_crypt_passwd}" :onchange "${EWW_CMD} update crypt_passwd={}" :onaccept "bin/disks.sh decrypt ${part.path} ${crypt_passwd}")
                                    )
                                    (error :if "${disk_decrypt_error}" :text "Failed to unlock. Wrong Password?")
                                )
                                (box :class "card_footer" :orientation "v" :space-evenly false
                                    (button :class "button${part.decrypt != "null" ? "-active" : ""}" :timeout "128s" :onclick "bin/disks.sh decrypt ${part.path} ${crypt_passwd}" "󰌿    Unlock")
                                )
                            )
                        )
                        )
                    )
                )
            )
        )
    )
)
