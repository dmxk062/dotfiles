(defvar disks "[]")
(defvar selected_disk "")
(defvar selected_part "")
(defvar crypt_passwd "")
(defvar hide_passwd true)

(defwidget path_button [path text] 
    (eventbox :class "link" :cursor "pointer" :onclick "bin/open_path.sh ${path}& disown" (label :text "${text}"))
)

(defwidget copy_text [text info] 
    (eventbox :class "copy" :onclick "wl-copy ${text}& disown" :cursor "pointer" :tooltip "Click to Copy" (label :limit-width 24 :text "${info} ${text}"))
)

(defwidget storage_section []
    (box :visible "${selected_section == 7}" :class "section_box" :hexpand true :orientation "h" :space-evenly false
        (box :halign "center" :orientation "v" :space-evenly false :class "sidebar"
            (box :orientation "v" :space-evenly false
                (label :class "title" :text "Devices")
                (for disk in disks
                    (button :class "button${selected_disk == disk.path ? "-active" : ""}" :timeout "16s" :onclick "${EWW_CMD} update selected_disk=${disk.path}" "${disk.icon}    ${disk.device.model?: disk.name}")
                )
            ) 
            (label :class "title" :text "Utilities")
            (button :class "button" :timeout "16s" :onclick "bin/suspend.sh gnome-disks" "󰋊    Disk Utility")
            (button :class "button" :timeout "16s" :onclick "bin/disks.sh upd" "󰑓    Reload")
        )
        (for disk in disks 
            (box :space-evenly false :visible "${selected_disk == disk.path}" :hexpand true :vexpand true
                (box :vexpand true :orientation "v" :halign "start"  :space-evenly false :class "sidebar_extension"
                    (box  :space-evenly false :orientation "v" :halign "center" :vexpand true
                        (box :space-evenly false :orientation "v" :vexpand true
                            (image :path "${icon_theme}/${disk.icon_g}" :image-width 128 :image-height 128)
                            (button :class "button" :timeout "16s" :onclick "bin/disks.sh eject ${disk.path}&&bin/disks.sh upd"  :visible "${disk.hotplug}" "󰇪    Eject")
                            (label :class "text-large" :text "Model: ${disk.device.model?: "No Information"}")
                            (label :class "text-large" :text "Made By: ${disk.device.vendor?: "No Information"}")
                            (label :class "text-large" :text "Type: ${disk.zram ? "Zram - Virtual Swap Device" : 
        "${disk.device.transport == "sata" ? "Sata Disk" :
        (disk.device.transport == "nvme" ? "NVME SSD" :
        (disk.device.transport == "mmc" ? "MMC/SD Flash Card":
        (disk.device.transport == "usb" ? "USB Mass Storage Device" :
        (disk.device.transport == "scsi" ? "SCSI Disk" : "Unknown"))))}"}")
                            (path_button :path "${disk.path}" :text "Device File Path: ${disk.path}")
                        )
                        (box :orientation "v" :space-evenly false
                            (label :class "title" :text "Partitions:" :visible "${arraylength(disk.partitions) > 0}")
                            (scroll :vscroll true :height 220
                                (box :orientation "v" :space-evenly false
                                    (for part in "${disk.partitions}"
                                        (button :class "button${selected_part == part.uuid ? "-active" : ""}" :timeout "16s" :onclick "${EWW_CMD} update selected_part=${part.uuid}" "${part.label?: part.name}")
                                    )
                                )
                            )
                        )
                    )
                )
                (box :orientation "v" :space-evenly false :halign "center" :hexpand true :vexpand true 
                    (for part in "${disk.partitions}"
                        (centerbox :space-evenly false :vexpand true :visible "${selected_part == part.uuid}" :orientation "v"
                            (box :space-evenly false :vexpand true :orientation "v"
                                (box :space-evenly false :vexpand true :orientation "v":visible "${! part.crypt}"
                                    (label :text "${part.label?: part.name}" :class "title")
                                    (copy_text :text "${part.uuid}" :info "UUID: ")
                                    (label :text "Filesystem: ${part.type}" :class "text-large")
                                    (label :text "Partition Type: ${part.parttype?: "No Partition Type"}" :class "text-large")
                                    (box :orientation "v" :space-evenly false :halign "center" :visible "${part.mounted}"
                                        (label :text "Mounted at:" :class "text-large")
                                        (for mountpoint in "${part.mount?: part.decrypt.mount}"
                                            (path_button :text "${mountpoint}" :path "${mountpoint}")
                                        )
                                    )
                                    (box :class "sliderbox" :orientation "v" :space-evenly false :halign "center" :spacing 8 :visible "${part.type != "swap"}"
                                    (overlay
                                        (scale :class "slider-thick" :value "${part.usage.perc?:0}" :active false )
                                        (label :class "text-large" :text "${part.mounted ? "Used: ${part.usage.used} / ${part.usage.size}" : "Mount to see usage"}")
                                    ))
                                )
                                (box :space-evenly false :vexpand true :orientation "v" :visible "${part.decrypt != "null"}"
                                    (label :text "${part.decrypt.label?: part.decrypt.name}" :class "title")
                                    (copy_text :text "${part.decrypt.uuid}" :info "UUID: ")
                                    (label :text "Filesystem: ${part.decrypt.type}" :class "text-large")
                                    (label :text "Partition Type: ${part.decrypt.parttype?: "No Partition Type"}" :class "text-large")
                                    (box :orientation "v" :space-evenly false :halign "center" :visible "${part.decrypt.mounted}"
                                        (label :text "${part.decrypt.mounted ? "Mounted At:" : "Not Mounted"}" :class "text-large")
                                        (for mountpoint in "${part.decrypt.mount}"
                                            (path_button :text "${mountpoint}" :path "${mountpoint}")
                                        )
                                    )
                                    (box :class "sliderbox" :orientation "v" :space-evenly false :halign "center" :spacing 8
                                    (overlay
                                        (scale :class "slider-thick" :value "${part.decrypt.usage.perc?:0}" :active false )
                                        (label :class "text-large" :text "${part.mounted ? "Used: ${part.decrypt.usage.used} / ${part.decrypt.usage.size}" : "Mount to see usage"}")
                                    ))
                                )
                            )
                            (box :visible "${part.crypt}" :orientation "v" :space-evenly false :halign "center"
                                (label :class "text-large" :text "Encrypted Partition")
                                (box :space-evenly false
                                (button :onclick "${EWW_CMD} update hide_passwd=${hide_passwd ? "false" : "true"}" :class "button${hide_passwd ? "" : "-active"}" "${hide_passwd ? "󰈉" : "󰈈"}")
                                (input :class "input" :timeout "128s" :password "${hide_passwd}" :onchange "${EWW_CMD} update crypt_passwd={}" 
                                :onaccept "bin/disks.sh decrypt ${part.path} ${crypt_passwd}||../bin/notify.sh 'Wrong Password?' 'Failed to decrypt ${part.path}' ")
                                (button :class "button${part.decrypt != "null" ? "-active" : ""}" :timeout "128s" :onclick "${part.decrypt != "null" ? "bin/disks.sh encrypt ${part.path}||../bin/notify.sh 'Failed to lock ${part.decrypt.label?: part.decrypt.name}' 'Try unmounting it'" : "bin/disks.sh decrypt ${part.path} ${crypt_passwd}||../bin/notify.sh 'Wrong Password?' 'Failed to decrypt ${part.path}'"}" "${part.decrypt != "null" ? "󰌿" : "󰌾"}")

                                )

                            )
                            (box :space-evenly false :halign "center" :orientation "v" :visible "${part.type != "swap"}" :valign "end"
                                (box :space-evenly false
                                    (button :class "button${part.mounted ? "-active" : ""}" :timeout "16s" 
                                    :onclick "${part.crypt ? "${part.mounted ? 
                                    "bin/disks.sh unmount ${part.decrypt.path}||../bin/notify.sh 'An error occured while unmounting ${part.decrypt.label?: part.decrypt.name}'&&bin/disks.sh upd" :
                                    "bin/disks.sh mount ${part.decrypt.path}||../bin/notify.sh 'An error occured while mounting ${part.decrypt.label?: part.decrypt.name}'&&bin/disks.sh upd"}"  :
                                    "${part.mounted ? 
                                    "bin/disks.sh unmount ${part.path}||../bin/notify.sh 'An error occured while unmounting ${part.label?: part.name}'&&bin/disks.sh upd" :
                                    "bin/disks.sh mount ${part.path}||../bin/notify.sh 'An error occured while mounting ${part.label?: part.name}'&&bin/disks.sh upd"}"}" "${part.mounted ? "Unmount" : "Mount"}"
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
    )
)
