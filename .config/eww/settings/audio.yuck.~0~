(defvar sources "[]")
(defvar sinks "[]")
(defvar streams "[]")
(defvar active_sinks '{}')
(defvar active_sources '{}')

(defvar audio_state '{}')

(defvar audio_section 0)

(defwidget audio_section []

    (box :visible "${selected_section == 4}" :class "section_box" :hexpand true :orientation "h" :space-evenly false    
        (box :orientation "v" :space-evenly false :class "sidebar"
            (box :space-evenly false :halign "center" :orientation "v"
                (button :class "button" :onclick "${audio_section == 0 ? "bin/sinks_sources.sh upd sinks" : (audio_section == 1 ? "bin/sinks_sources.sh upd sources" : "bin/mixer.sh")}&&bin/audio_state.sh""󰑓    Reload")
            )
            (box  :orientation "v" :space-evenly false :spacing 16
                (box :orientation "v" :space-evenly false :halign "center" :class "card"
                    (box :orientation "v" :space-evenly false :class "padding_box"
                        (label :class "title" :text "Out: ${active_sinks.name}" :limit-width 20 :class "title")
                        (scale :value "${audio_state.sink.vol}" :class "slider" :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%" :timeout "16s")
                    )
                    (box :space-evenly false :class "card_footer"
                        (button :class "button${audio_state.sink.mute ? "" : "-active"}" :onclick "pamixer -t&&bin/audio_state.sh" :timeout "16s" "${audio_state.sink.mute ? "${active_sinks.icon.muted}" : "${active_sinks.icon.unmuted}"}    Mute")
                        (button :class "button" :onclick "pactl set-sink-volume @DEFAULT_SINK@ 50%&&bin/audio_state.sh" :timeout "24s" "50%")
                        (button :class "button" :onclick "pactl set-sink-volume @DEFAULT_SINK@ 100%&&bin/audio_state.sh" :timeout "24s" "100%")
                    )
                    )
            
                (box :orientation "v" :space-evenly false :halign "center" :class "card"
                    (box :orientation "v" :space-evenly false :class "padding_box"
                        (label :class "title" :text "In: ${active_sources.name}" :limit-width 20 :class "title")
                        (scale :value "${audio_state.source.vol}" :class "slider" :onchange "pactl set-source-volume @DEFAULT_SOURCE@ {}%" :timeout "16s")
                    )
                    (box :space-evenly false :class "card_footer"
                        (button :class "button${audio_state.source.mute ? "" : "-active"}" :onclick "pamixer -t --default-source&&bin/audio_state.sh" :timeout "16s" "${audio_state.source.mute ? "${active_sources.icon.muted}" : "${active_sources.icon.unmuted}"}    Mute")
                        (button :class "button" :onclick "pactl set-source-volume @DEFAULT_SOURCE@ 50%&&bin/audio_state.sh" :timeout "24s" "50%")
                        (button :class "button" :onclick "pactl set-source-volume @DEFAULT_SOURCE@ 100%&&bin/audio_state.sh" :timeout "24s" "100%")
                    )
                )
            )
        )
        (box :halign "center" :hexpand true
        (box :space-evenly false :orientation "v" :valign "start" 
            (box :class "section_selector" :space-evenly false :valign "start" :orientation "v"  
                (box :space-evenly false :halign "center" :orientation "h" 
                    (button :class "button${audio_section == 0 ? "-active" : ""}" :onclick "${EWW_CMD} update audio_section=0&&bin/sinks_sources.sh upd sinks" "${active_sinks.icon.unmuted}    Outputs")
                    (button :class "button${audio_section == 1 ? "-active" : ""}" :onclick "${EWW_CMD} update audio_section=1&&bin/sinks_sources.sh upd sources""${active_sources.icon.unmuted}    Inputs")
                    (button :class "button${audio_section == 2 ? "-active" : ""}" :onclick "${EWW_CMD} update audio_section=2&&bin/mixer.sh""󰃂    Streams")
                )
            )
            (box :visible "${audio_section == 0}" :space-evenly false :halign "center"
                (scroll :vscroll true :class "scroll-huge-wider"
                    (box :orientation "v" :space-evenly false
                        (for sink in sinks
                            (box :space-evenly false :orientation "v" :class "card"
                                (box :class "padding_box" :orientation "v" :space-evenly false
                                    (label :text "${sink.name}" :limit-width 20 :class "card-label" :tooltip "${sink.name}")
                                    (box :class "sliderbox" :space-evenly false
                                        (icon :name "${sink.icon_g}" :class "icon")
                                        (scale :class "slider" :value "${sink.volume}" :timeout "16s" :onchange "pactl set-sink-volume ${sink.id} {}%&&bin/audio_state.sh")
                                    )
                                )
                                (box :class "card_footer" :orientation "v"
                                    (box
                                        (button :timeout "16s" :onclick "pactl set-sink-mute ${sink.id} ${sink.mute ? "0" : "1"}&&bin/sinks_sources.sh upd sinks&&bin/audio_state.sh" :class "button${sink.mute ? "" : "-active"}" "${sink.mute ? "󰓄    Muted" : "󰓃    Unmuted"}")
                                        (button :timeout "16s" :onclick "pactl set-default-sink ${sink.id} &&bin/sinks_sources.sh upd sinks&&bin/audio_state.sh" :class "button${sink.active ? "-active" : ""}" "Set as Default")
                                    )
                                    (box :visible "${arraylength("${sink.ports}") > 1}"
                                        (for port in "${sink.ports}"
                                            (button :timeout "16s" :onclick "pactl set-sink-port ${sink.id} ${port.name}&&bin/sinks_sources.sh upd sinks" :class "button${port.name == sink.port ?"-active" : ""}" (label :text "${port.icon}     ${port.desc}" :limit-width 20))
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
            (box :visible "${audio_section == 1}" :space-evenly false :halign "center"
                (scroll :vscroll true :class "scroll-huge-wider"
                    (box :orientation "v" :space-evenly false 
                        (for source in sources
                            (box :space-evenly false :orientation "v" :class "card"
                                (box :class "padding_box" :space-evenly false :orientation "v"
                                    (label :text "${source.name}" :limit-width 20  :class "card-label" :tooltip "${source.name}")
                                    (box :class "sliderbox" :space-evenly false
                                        (icon :name "${source.icon_g}" :class "icon")
                                        (scale :class "slider" :value "${source.volume}" :timeout "16s" :onchange "pactl set-source-volume ${source.id} {}%&&bin/audio_state.sh")
                                    )
                                )
                                (box :orientation "v" :space-evenly false :class "card_footer"
                                    (box
                                        (button :timeout "16s" :onclick "pactl set-source-mute ${source.id} ${source.mute ? "0" : "1"}&&bin/sinks_sources.sh upd sources&&bin/audio_state.sh" :class "button${source.mute ? "" : "-active"}" "${source.mute ? "󰓄    Muted" : "󰓃    Unmuted"}")
                                        (button :timeout "16s" :onclick "pactl set-default-source ${source.id} &&bin/sinks_sources.sh upd sources&&bin/audio_state.sh" :class "button${source.active ? "-active" : ""}" "Set as Default")
                                    )
                                    (box :visible "${arraylength("${source.ports}") > 1}"
                                        (for port in "${source.ports}"
                                            (button :timeout "16s" :onclick "pactl set-source-port ${source.id} ${port.name}&&bin/sinks_sources.sh upd sources" :class "button${port.name == source.port ?"-active" : ""}" (label :text "${port.icon}     ${port.desc}" :limit-width 10))
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
        
            (box :visible "${audio_section == 2}" :space-evenly false :halign "center"
                (scroll :vscroll true :class "scroll-huge-wider" :hexpand true
                    (box :orientation "v" :space-evenly false
                        (for stream in streams
                            (box :class "card" :space-evenly false :orientation "v"
                                (box :class "padding_box" :orientation "v" :space-evenly false
                                    (label :class "card-label" :text "${stream.name} - ${stream.app}" :limit-width 32 :tooltip "${stream.name} in ${stream.app}")
                                    (box :class "sliderbox" :space-evenly false
                                        (scale :class "slider-large" :value "${stream.volume}" :min 0 :max 101 :timeout "16s" :onchange "pactl set-sink-input-volume ${stream.id} {}%&&bin/mixer.sh&disown")
                                    )
                                )
                                (box :space-evenly false :class "card_footer" :halign "center"
                                    (button :timeout "16s" :class "button${stream.mute ? "" : "-active"}":onclick "pactl set-sink-input-mute ${stream.id} toggle&&bin/mixer.sh" "${stream.mute ? "󰝟    Muted" : "󰖀    Unmuted"}")
                                    (button :timeout "16s" :class "button" :onclick "pactl set-sink-input-volume ${stream.id} 50%&&bin/mixer.sh" "50%")
                                    (button :timeout "16s" :class "button" :onclick "pactl set-sink-input-volume ${stream.id} 100%&&bin/mixer.sh" "100%")
                                    (label :class "button" :text "Current: ${stream.volume}%")
                                )
                            )
                        )
                    )
                )
            )
        )
        )
    )
)

