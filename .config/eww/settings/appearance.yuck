(defvar look_walls "[]")
(defvar look_activewall "")
(defvar look_activelock "")


;; all the appearance options rn:
(defvar look_colorscheme "dark") ;; theming
(defvar look_nightlight false) ;; wlsunset

(defvar look_blur_win true)
(defvar look_blur_xray true)
(defvar look_blur_special false)

(defvar look_opacity false) ;; only for kitty, as that is my only opaque app
(defvar look_rounding true)
(defvar look_border false)
(defvar look_shadow true)
;; both of these are on off, not values
(defvar look_gaps_in true)
(defvar look_gaps_out true)

;; and the adjustable values
;; (defvar look_blur_brightness 100)
;; (defvar look_blur_contrast 80)
;; (defvar look_blur_noise 1.17)


(defwidget appearance_section []
    (box :visible "${selected_section == 0}" :class "section_box" :hexpand true :space-evenly false
        (box :orientation "h" :space-evenly false :class "sidebar"
            (scroll :class "scroll-medium"
                (box :space-evenly false :orientation "v"
                    (label :class "title" :text "Appearance")
                    (list_box
                        (button :class "button${look_opacity ? "-active" : ""}" :onclick "bin/look/decoration.sh opacity" :timeout "16s" "󱡓    Transparency")
                        (wrapped_text :text "Make kitty transparent, use Blur to make it nicer to use")
                        
                    )
                    (list_box
                        (box 
                        (button :class "button${look_nightlight ? "-active" : ""}" :onclick "bin/look/nightlight.sh" :timeout "16s" "    Nightlight")
                        (button :class "button" :onclick "bin/look/color.sh" :timeout "128s" "${look_colorscheme == "light" ? "󰖨    Light theme" : "󰖔    Dark theme"}")
                        )
                        (wrapped_text :text "Reduce the blue light content of the screen. For themes to apply for all applications, restarting or reloading the session might be required.")
                    )
                    (list_box 
                        (box
                        (button :class "button${look_blur_win ? "-active" : ""}" :onclick "bin/look/blur.sh win" :timeout "16s"  "${look_blur_win ? "󰂵" : "󰂷"}    Windows")
                        (button :class "button${look_blur_special ? "-active" : ""}" :onclick "bin/look/blur.sh ws" :timeout "16s"  "󰂶    Special")
                        )
                        (wrapped_text :text "Enable blur for windows or special workspaces")
                    )
                    (list_box
                        (box
                        (button :class "button${look_gaps_out ? "-active" : ""}" :onclick "bin/look/gaps.sh out" :timeout "16s" :tooltip "Enable/Disable Gaps between Windows and the Edge" "󰹑    Screen")
                        (button :class "button${look_gaps_in ? "-active" : ""}" :onclick "bin/look/gaps.sh in" :timeout "16s" :tooltip "Enable/Disable Gaps between Windows" "󱁐    Windows")
                        )
                        (wrapped_text :text "Where gaps should be. Both around the monitor itself or other windows")
                    )
                    (list_box
                        (box
                        (button :class "button${look_border ? "-active" : ""}" :onclick "bin/look/decoration.sh border" :timeout "16s" :tooltip "Enable/Disable Window Borders" "${look_border ? "󰢡" : "󰢤"}    Borders")
                        (button :class "button${look_rounding ? "-active" : ""}" :onclick "bin/look/decoration.sh rounding" :timeout "16s" :tooltip "Enable/Disable Rounded Corners on Windows" "${look_rounding ? "󱓼" : "󰢡"}    Rounding")
                        )
                        (wrapped_text :text "Enable / Disable borders and make them round")
                    )
                    (list_box
                        (box
                        (button :class "button${look_blur_xray ? "-active" : ""}" :onclick "bin/look/blur.sh xray" :timeout "16s" "${look_blur_xray ? "" : ""}    Blur Xray")
                        (button :class "button${look_shadow ? "-active" : ""}" :onclick "bin/look/decoration.sh shadow" :timeout "16s" :tooltip "Enable/Disable Border Shadow on Windows" "󰘷    Shadow")
                        )
                        (wrapped_text :text "Make floating windows and overlapping layers look through to the wallpaper. Enable / Disable shadows for windows")
                    )
                    ;; (list_box 
                    ;;     (list_box
                    ;;         (button :class "button" :onclick "bin/look_blur.sh 100 brightness" "    Reset look_blur Brightness")
                    ;;         (margin(scale :value "${look_blur_brightness}" :min 0 :max 200 :class "slider" :onchange "bin/look_blur.sh {} brightness"))
                    ;;         (wrapped_text :text "Control how bright the look_blurred content becomes")
                    ;;     )
                    ;;     (list_box
                    ;;         (button :class "button" :onclick "bin/look_blur.sh 80 contrast" "󰆕    Reset look_blur Contrast")
                    ;;         (margin(scale :value "${look_blur_contrast}" :min 0 :max 200 :class "slider" :onchange "bin/look_blur.sh {} contrast"))
                    ;;         (wrapped_text :text "Control the contrast of the look_blur")
                    ;;     )
                    ;;     (list_box
                    ;;         (button :class "button" :onclick "bin/look_blur.sh 1.17 noise" "󰂸    Reset look_blur Noise")
                    ;;         (margin(scale :value "${look_blur_noise}" :min 0 :max 50 :class "slider" :onchange "bin/look_blur.sh {} noise"))
                    ;;         (wrapped_text :text "Control the noise level of the look_blur")
                    ;;     )
                    ;; )
                )
            )
            (separator)
            (scroll :class "scroll-medium"
                (box :orientation "v" :space-evenly false
                    (label :class "title" :text "Wallpapers")
                    (list_box
                        (button :class "button${look_walls != "[]" ? "-active" : ""}" :timeout "16s" :onclick "${look_walls != "[]" ? '${EWW_CMD} update look_walls=\'[]\'' : '${EWW_CMD} update look_walls="$(< ~/.config/background/walls.json)"&&${EWW_CMD} update look_activelock=$(realpath ~/.config/background/lock)&&${EWW_CMD} update look_activewall=$(realpath ~/.config/background/wall)'}" "󰋩    Show Wallpapers")
                        (wrapped_text :text "Show all the configured wallpapers. Unload them before closing the window for faster load times")
                    )
                    (list_box
                        (button :class "button" :timeout "128s" :onclick "bin/look/wallpaper.sh file" "󰉋    Browse")
                        (wrapped_text :text "Browse the filesystem for wallpapers")
                    )
                    (list_box
                        (button :class "button" :timeout "128s" :onclick "bin/look/wallpaper.sh color" "    Color")
                        (wrapped_text :text "Set a solid color as a wallpaper")
                    )
                    (list_box
                        (button :class "button" :timeout "16s" :onclick "bin/suspend.sh kitty -e nvim ~/.config/background/walls.json" "󰂮    Edit Wallpapers")
                        (wrapped_text :text "Edit walls.json in neovim")
                    )
                    ;; (list_box
                    ;;     (button :class "button" :timeout "16s" :onclick "bin/suspend.sh 'gradience'" "    Edit Adwaita Colors")
                    ;;     (wrapped_text :text "Use Gradience to edit your current GTK 4.0/Adwaita color scheme. (requires session restart to take effect)")
                    ;; )
                )
            )
        )
        (scroll :vscroll true :class "scroll-high"
            (box :orientation "v" :space-evenly false
                (for wall in look_walls
                    (box :space-evenly false :class "card" :orientation "v"
                        (box :class "padding_box_small"
                            (image :path "${wall.path}" :image-width 200 :image-height 120)
                        )
                        (box :hexpand true :class "card_footer" :orientation "v"
                            (label :class "title" :text "${wall.name}")
                            (box :space-evenly false :halign "center"
                                (button :class "button${wall.path == look_activewall ? "-active" : ""}" :timeout "16s" 
                                :onclick "~/.config/background/wallpaper.sh wall '${wall.path}'; ${EWW_CMD} update look_activewall=$(realpath ~/.config/background/wall)" 
                                "󰋩    Desktop")
                                (button :class "button${wall.path == look_activelock ? "-active" : ""}" :timeout "16s" 
                                :onclick "~/.config/background/wallpaper.sh lock '${wall.path}'; ${EWW_CMD} update look_activelock=$(realpath ~/.config/background/lock)"

                                "󱪰    Lockscreen")
                            )
                        )
                    )
                )
            )
        )
    )
)

