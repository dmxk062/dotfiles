(defvar wlans "[]")
(defvar wlan_power false)
(defvar wifi_search_icon "󰑓")
(deflisten wifi_status "bin/wlan.sh listen")
(defvar wifi_password_reveal false)
(defvar connect_ssid "")
(defvar wifi_passwd "")
(defvar empty "")
(defvar show_qr true)

(defwidget wifi_section []
    (box :visible "${selected_section == 6}" :class "section_box" :hexpand true :orientation "h" :space-evenly false
        (box :orientation "v" :space-evenly false :class "sidebar"
            (box :class "card" :orientation "v" :space-evenly false
                (box :space-evenly false :halign "center" :orientation "v" :class "padding_box"
                    (box  :orientation "v" :space-evenly false
                        (circular-progress :value "${wifi_status.strength?: 0}" :thickness 8 :class "circle"
                            (label :class "${wifi_status.ssid == "" ? "off" : ""}" :text "${wifi_status.icon ?: "󰤭"}")
                        )
                    )
                )
                (box :class "card_footer" :orientation "v" :space-evenly false
                    (label :text "Current: ${wifi_status.ssid?: "No Network"}" :limit-width 32)
                    (label :text "Signal Strength: ${wifi_status.strength ?: 0}%")
                    (box :space-evenly false
                        (button :timeout "256s" :onclick "bin/wlan.sh toggle&&sleep 1&&bin/wlan.sh upd" :class "button${wlan_power ? "-active" : ""}" "    Power")
                        (button :timeout "256s" :onclick "bin/wlan.sh upd" :class "button" "${wifi_search_icon}    Reload")
                    )
                )
            )
            (box :visible "${wifi_status.ssid != "" ? true : false}" :orientation "v" :space-evenly false
                (box 
                    (button :class "button" :onclick "${EWW_CMD} update show_qr=${show_qr ? "false" : "true"}" "    QR Code")
                )
                (box :visible show_qr
                    (image :path "${wifi_status.qrpath}" :image-width 180 :image-height 180) 
                )
            )
        )
        (box :orientation "v" :space-evenly false :class "sidebar_extension" :visible "${wifi_password_reveal && wlan_power}"
            (box :class "card" :orientation "v" :space-evenly false
                (box :class "padding_box" :space-evenly false :orientation "v"
                    (label :class "title" :text "Password for: ${connect_ssid}" :limit-width 19)
                    (input :timeout "128s" :onchange "${EWW_CMD} update wifi_passwd='{}'" :onaccept "bin/wlan.sh connect '${connect_ssid}' true '${wifi_passwd}'& disown" :password true :class "input" :value wifi_passwd)
                )
                (box :class "card_footer"
                    (button :timeout "16s" :onclick "${EWW_CMD} update wifi_passwd=''&&${EWW_CMD} update wifi_password_reveal=false" :class "button" "Cancel")
                    (button :timeout "16s" :onclick "bin/wlan.sh connect '${connect_ssid}' true '${wifi_passwd}'& disown" :class "button-active" "Connect")
                )
            )

        )
        (box :visible wlan_power :hexpand true :halign "start"
            (scroll :vscroll true :class "scroll-narrow" :visible wlan_power
                (box :space-evenly false :halign "center"
                    (box :orientation "v" :space-evenly false
                        (for wifi in wlans
                            (box :class "card" :orientation "v" :space-evenly false :spacing 8
                                (box :orientation "v" :space-evenly false :valign "center" :class "padding_box"
                                    (circular-progress :value "${wifi.strength?: 0}" :thickness 6 :class "circle" :tooltip "${wifi.strength}%"
                                        (label  :text "${wifi.strength_icon ?: "󰤭"}")
                                    )
                                )
                                (label :class "card-label" :text "${wifi.ssid}" :limit-width 20)
                                (box :orientation "v" :space-evenly false :class "card_footer"
                                    (box :space-evenly false :halign "center"
                                        (button :class "button${wifi.ssid == wifi_status.ssid ? "-active" : ""}" :timeout "256s" :onclick "${wifi.password ? "${EWW_CMD} update wifi_password_reveal=true&&${EWW_CMD} update connect_ssid=${wifi.ssid}": "bin/wlan.sh connect ${wifi.ssid} false"}" "Connect${wifi.ssid == wifi_status.ssid ? "ed" : ""}")
                                        (label :class "button${wifi.password ? "" : "-nice"}" :text "${wifi.password ? "󰒘    ${wifi.security}" : "󰦞    No Password"}")
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
    )
)
