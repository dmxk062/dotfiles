(defvar wlans "[]")
(defvar wlan_power false)
(defvar wifi_search false)
(deflisten wifi_status "bin/wlan.sh listen")
(defvar wifi_password_reveal false)
(defvar wifi_connect_ssid "")
(defvar wifi_passwd "")
(defvar hide_wifi_passwd true)
(defvar empty "")
(defvar wifi_show_qr false)
(defvar wifi_connect_error false)
(defvar wifi_connect_error_reason "")

(defvar wifi_connecting false)

(defvar wifi_edit_menu false)

(defwidget wifi_section []
    (box :visible "${selected_section == 6}" :class "section_box" :hexpand true :orientation "h" :space-evenly false
        (box :space-evenly false :class "sidebar" :visible {wlan_power}
            (box :class "padding_box" :orientation "v" :space-evenly false
                (overlay
                    (box :class "card" :orientation "v" :space-evenly false
                        (box :space-evenly false :halign "center" :orientation "v" :class "padding_box" :vexpand true
                            (box  :orientation "v" :space-evenly false
                                (circular-progress :value "${wifi_status.strength?: 0}" :thickness 8 :class "circle"
                                    (label :class "${wifi_status.ssid == "" ? "off" : "on"}" :text "${wifi_status.icon ?: "󰤭"}")
                                )
                            )
                        )
                        (box :class "card_footer" :orientation "v" :space-evenly false
                            (box :orientation "v"
                                (label :text "${wifi_status.ssid?: "No Network"}" :limit-width 32 :class "card-label")
                                (label :text "Signal Strength: ${wifi_status.strength ?: 0}%" :class "text-np")
                            )
                            (box
                                (button :timeout "256s" :onclick "bin/wlan.sh toggle&&sleep 1&&bin/wlan.sh upd" :class "button${wlan_power ? "-active" : ""}" "    Power")
                                (button :timeout "256s" :onclick "bin/wlan.sh upd" :class "button" "${wifi_search ? "" : "󰑓"}    Reload")
                            )
                            (box :visible {wifi_status.ssid != ""} :orientation "v"
                                (box
                                    (button :class "button" :onclick "${EWW_CMD} update wifi_show_qr=true" "    QR Code")
                                    (button :class "button" :onclick "${EWW_CMD} update wifi_edit_menu=true" "󱚾    Edit")
                                )
                                (box
                                    (button :class "button-error" :onclick "nmcli connection down ${wifi_status.ssid}; bin/wlan.sh upd" 
                                    :timeout "128s" :visible {wifi_status.ssid != ""} "󰤭    Disconnect")
                                )
                            )
                            (button :class "button" :onclick "nmcli connection down '${wifi_connect_ssid}'; bin/wlan.sh upd" 
                            :timeout "128s" :visible wifi_connecting "󱚼    Cancel")
                        )
                    )
                    (box :visible wifi_edit_menu :class "card-no_shadow" :space-evenly false :orientation "v"
                        (box :class "padding_box" :vexpand true :space-evenly false :orientation "v"
                            (button :class "button" :onclick "bin/edit_connection.sh ${wifi_status.ssid}&" :timeout "16s" "󱆠    Edit in NM-Applet")
                        )
                        (box :class "card_footer" :space-evenly false
                            (box :space-evenly false :hexpand true
                                (button :class "button-error" :onclick "nmcli connection delete ${wifi_status.ssid}; bin/wlan.sh upd" 
                                :timeout "128s" :visible {wifi_status.ssid != ""} "󰩹    Forget")
                            )
                            (button :class "button" :onclick "${EWW_CMD} update wifi_edit_menu=false" "Close")

                        )
                    )
                    (box :visible wifi_show_qr :class "card-no_shadow" :space-evenly false :orientation "v"
                        (box :class "padding_box" :vexpand true :space-evenly false :orientation "v"
                            (box :space-evenly false :orientation "v" :vexpand true
                            (image :path "${wifi_status.qrpath}" :image-width 180 :image-height 180))
                            (save_from_file :file {wifi_status.qrpath} :name "${wifi_status.ssid}.png" :text "Save" :title "Save QR-Code as" :precmd "${EWW_CMD} close settings" :postcmd "eww_settings.sh")
                        )
                        (box :class "card_footer" :orientation "v"
                            (button :class "button" :onclick "${EWW_CMD} update wifi_show_qr=false" "Close")
                        )
                    )
                )
            )
            (box :orientation "h" :space-evenly false :visible "${wifi_password_reveal && wlan_power}"
                (separator)
                (box :space-evenly false :class "padding_box" :orientation "v" :vexpand true
                    (box :class "card" :orientation "v" :space-evenly false
                        (box :class "padding_box" :space-evenly false :orientation "v"
                            (label :class "title" :text "Password for: ${wifi_connect_ssid}" :limit-width 19)
                            (input :timeout "128s" :onchange "${EWW_CMD} update wifi_passwd='{}'" :onaccept "bin/wlan.sh connect '${wifi_connect_ssid}' true '${wifi_passwd}'& disown" :password hide_wifi_passwd :class "input" :value wifi_passwd)
                            (box :space-evenly false :orientation "v" :visible wifi_connect_error
                                    (scroll :style 'min-height: 10rem;'
                                    (box :orientation "v" :space-evenly false (box :class "err-box" :hexpand true :space-evenly false :orientation "v"
                                            (label :class "text-np" :wrap true :justify "left" :markup "<b>Failed to connect to ${wifi_connect_ssid}</b>:
    ${wifi_connect_error_reason}")
                                        ))
                                    )
                            )
                        )
                        (box :class "card_footer" :space-evenly false :halign "center" :hexpand true
                            (button :onclick "${EWW_CMD} update hide_wifi_passwd=${!hide_wifi_passwd}" :class "button${hide_wifi_passwd? "" : "-active"}" "${hide_wifi_passwd ? "󰈉" : "󰈈"}")
                            (button :timeout "16s" :onclick "${EWW_CMD} update wifi_passwd=''&&${EWW_CMD} update wifi_password_reveal=false" :class "button" "Cancel")
                            (button :timeout "16s" :onclick "bin/wlan.sh connect '${wifi_connect_ssid}' true '${wifi_passwd}'& disown" :class "button-active" "Connect")
                        )
                    )
                )

            )
        )
        (box :visible wlan_power :hexpand true :halign "start"
            (scroll :vscroll true :class "scroll-narrow" :visible wlan_power
                (box :space-evenly false :halign "center"
                    (box :orientation "v" :space-evenly false
                        (for wifi in wlans
                            (box :class "card" :orientation "v" :space-evenly false :spacing 8
                                (box :orientation "v" :space-evenly false :valign "center" :class "padding_box"
                                    (circular-progress :value "${wifi.strength?: 0}" :thickness 6 :class "circle" :tooltip "${wifi.strength}%"
                                        (label  :text "${wifi.strength_icon ?: "󰤭"}")
                                    )
                                )
                                (label :class "card-label" :text "${wifi.ssid}" :limit-width 20)
                                (box :orientation "v" :space-evenly false :class "card_footer"
                                    (box :space-evenly false :halign "center"
                                        (button :class "button${wifi.ssid == wifi_status.ssid ? "-active" : ""}" :timeout "256s" 
                                        :onclick "${wifi.password ? "bin/wlan.sh connect '${wifi.ssid}' try|| ${EWW_CMD} update wifi_password_reveal=true wifi_connect_ssid=${wifi.ssid}": "bin/wlan.sh connect ${wifi.ssid} false"}" "Connect${wifi.ssid == wifi_status.ssid ? "ed" : ""}")
                                        (label :class "button${wifi.password ? "" : "-nice"}" :text "${wifi.password ? "󰒘    ${wifi.security}" : "󰦞    No Password"}")
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
        (box :visible "${!wlan_power}" :hexpand true :vexpand true :class "padding_box" :orientation "v" :space-evenly false :valign "center"
        (box :class "padding_box"
            ;; (icon_background :name "32/status/dialog-error.svg")
            (themed_icon :name "system-error" :height 256 :width 256)

        )
        (label :class "heading" :text "WIFI is either turned off or not available")
        (box :space-evenly false :halign "center"
             (button :class "button-active" :timeout "16s" :onclick "bin/wlan.sh toggle; sleep 1; bin/wlan.sh update"              "    Turn WiFi On")
        )


        )
    )
)
