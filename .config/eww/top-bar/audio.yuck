(defvar audio_state '{}')
(defvar active_sinks '{}')
(defvar active_sources '{}')

(defwidget audio_buttons []
(button :class "sbutton" :timeout "16s" :onclick "${EWW_CMD} open audio_popup --toggle"
    (box :space-evenly false 
        ;; (button :timeout "16s" :class "sbutton" :onclick ""  "${audio_state.sink.mute ? active_sinks.icon.muted : active_sinks.icon.unmuted}  ${audio_state.sink.vol}% | ${audio_state.source.mute ? active_sources.icon.muted : active_sources.icon.unmuted}  ${audio_state.source.vol}")
        (label :text "${audio_state.sink.mute ? active_sinks.icon.muted : active_sinks.icon.unmuted}  ${audio_state.sink.vol}%" )
        (separator)
        (label :text "${audio_state.source.mute ? active_sources.icon.muted : active_sources.icon.unmuted}  ${audio_state.source.vol}%" )
    )
)
)

(defwindow audio_popup 
        :monitor 0
        :geometry (geometry :x 0
                            :y 0
                            :width 0
                            :height 0
                            :anchor "top right"
                    )
        :stacking "overlay"
        :namespace "eww_bar_top"
    (audio)
)

(defwidget audio []
    (box :space-evenly false :halign "center" :valign "center"
        (box :class "popup_box" :orientation "v" :space-evenly false
            (box :orientation "v" :class "padding_box")
            (box :class "padding_box_small" :space-evenly false
                (icon :name "${active_sinks.icon_g}" :class "icon")
                (box :space-evenly false :orientation "v"
                    (label :class "title" :text "${active_sinks.name}")
                    (scale :class "slider" :value "${active_sinks.volume}")
                )
            )
            (box :orientation "v" :class "popup_footer")
        )
    )
)
