(defvar mode-names '{
"default": "insert",
"normal": "normal",
"media": "media",
"screenshot": "print",
"clipboard":"clip",
"config":"config"
}')

(defvar mode-descs '{
"default": [ ],
"media": [
    {"keys": "<M-*", "action": "On Microphone"},
    {"keys": "[jk]", "action": "Change Volume"},
    {"keys": "[hl]", "action": "Seek"},
    {"keys": "[0-9]", "action": "Set Volume" },
    {"keys": "[nN]", "action": "Cycle Device"},
    {"keys": "m", "action": "Mute / Unmute"},
    {"keys": "<Space>", "action": "Play / Pause"}
],
"screenshot": [
    {"keys": "s", "action": "Screen" },
    {"keys": "v", "action": "Visual" },
    {"keys": "w", "action": "Window" },
    {"keys": "<C-*", "action": "To Disk" },
    {"keys": "<S-s>", "action": "Record Screen"},
    {"keys": "<S-v>", "action": "Record Visual"},
    {"keys": "c", "action": "Color"},
    {"keys": "q", "action": "QR-Code"},
    {"keys": "t", "action": "Text"}
],
"config": [
    {"keys": "w", "action": "Wallpaper"},
    {"keys": "r", "action": "Random Wallpaper"},
    {"keys": "n", "action": "Nighlight"},
    {"keys": "t", "action": "Theme"},
    {"keys": "b", "action": "Toggle Bar"},
    {"keys": "c", "action": "Toggle Clock"},
    {"keys": "m", "action": "Mirror Screen"}
],
"normal": [
    {"keys": "[0-9]", "action": "Workspace"},
    {"keys": "\`", "action": "Scratch"},
    {"keys": "][", "action": "n/p"},
    {"keys": "hjkl", "action":"Windows"},
    {"keys": "<C-*>", "action":"Resize"},
    {"keys": "<S-*>", "action": "Move"},
    {"keys": "f", "action": "Fullscreen"},
    {"keys": "d", "action": "Detach"}
],
"clipboard": [
    {"keys": "<M-*>", "action": "Operate on Selection"},
    {"keys": "P", "action": "Print"},
    {"keys": "Y", "action": "Copy other"},
    {"keys": "E", "action": "Edit"},
    {"keys": "C", "action": "Clear"}
]
}')

(deflisten mode
    :initial '{"change": "default"}'
    'swaymsg -t subscribe \'["mode"]\' -m')

(defwidget mode-hints []
    (box :space-evenly false 
        (for desc in {mode-descs[mode.change]}
            (box :space-evenly false :class "mode-box"
            (label :text "${desc.keys}" :class "mode-keys")
            (label :text "${desc.action}" :class "mode-action")))))

(defwidget mode-symbol []
    (box :space-evenly false
        (label 
            :class "mode-${mode.change}"
            :text "${mode-names[mode.change]}")))
