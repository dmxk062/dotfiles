(defvar city "Graz")
(defvar weather '{}')
(defvar weather_load false)
(defvar last_weather 0)
(defvar calendar_vals '[]')

(defwindow weather_popup 
        :monitor 0
        :geometry (geometry :x 0
                            :y 0
                            :width 0
                            :height 0
                            :anchor "top right"
                    )
        :stacking "overlay"
        :namespace "eww_popup"
    (weather)
)

(defwidget weather []
    (box :space-evenly false :halign "center" :valign "center"
        (box :space-evenly false :orientation "v" :class "popup_box"
            (box :space-evenly false :class "padding_box" :halign "center" :valign "center"
                (box :halign "center" :class "padding_box"
                (themed_icon :name {weather.icon?:'system-error'} :width 128 :height 128)
                )
                (separator)
                (box :space-evenly false :orientation "v" :visible "${weather != '[]'}" :valign "center"
                    (label :class "text-large" :text "${weather.weather[0].main}")
                    (label :class "text-large" :text "${round(weather.main.temp,1)}°C in ${weather.name}")
                    (label :class "text-large" :text "Feels like ${round(weather.main.feels_like,1)}°C")
                    (label :class "text-large" :text "Humidity: ${weather.main.humidity}%")
                    (label :class "text-large" :text "Wind: ${round(weather.wind.speed / 3.6,1)}km/h")
                )
            )
            (box :space-evenly false :class "popup_footer" :orientation "v"
                (box :space-evenly false
                    (button :class "button" :onclick "bin/weather.sh upd ${city}" "${weather_load ? "" : "󰑓"}")
                    (button :class "button":onclick "bin/weather.sh change& disown ${city}" :timeout "128s" "󱅙    ${city}")
                    (button :class "button":onclick "gtk-launch org.gnome.clocks" :timeout "128s" "󰥔    Clocks")
                    (label :class "button" :text "${formattime(EWW_TIME,"%T")}" :hexpand true)
                )
                (calendar :show-details true :onclick "${EWW_CMD} update calendar_vals='[{0}, {1}, {2}]'")
                (box
                (clipboard_button :content "${calendar_vals[0]}/${calendar_vals[1]+1}/${calendar_vals[2]}" :icon "󰃭"
                    :label {calendar_vals != [] ? 
                        "${strlength(calendar_vals[0]) == 1 ? "0${calendar_vals[0]}" : calendar_vals[0]}.${strlength(calendar_vals[1]+1) == 1 ? "0${calendar_vals[1]+1}" : calendar_vals[1]+1}.${calendar_vals[2]}" :
                        formattime(EWW_TIME, "%d.%m.%Y")
                    }

                )
                )
            )
        )
    )
)

