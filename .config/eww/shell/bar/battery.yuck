(deflisten battery "bin/battery.sh")

(defvar icons_discharging '[
"󰂎", "󰁺", "󰁻", "󰁼", "󰁽", "󰁾", "󰁿", "󰂀", "󰂁", "󰂂", "󰁹"
]' )
(defvar icons_charging '[
"󰢟", "󰢜", "󰂆", "󰂇", "󰂈", "󰢝", "󰂉", "󰢞", "󰂊", "󰂋", "󰂅"
]' )

(defwidget battery []
(box :class "menubox-off" 
;;     (label :class "${battery.charging ? "battery-charging" : "${battery.perc < 10 ? "battery-critical" : "battery"}"}"
;;             :text "${battery.charging ? (icons_charging[(battery.perc - battery.perc % 10)/10]) : (icons_discharging[(battery.perc - battery.perc % 10)/10])}    ${battery.perc}%"
;;             :tooltip "${battery.charging ? "Charging at" : "Discharging at"} ${battery.wattage}W
;; ${battery.time} ${battery.charging ? "until full" : "left"}"
    ;; )
    (button :class "${battery.charging ? "battery-charging" : "${battery.perc < 10 ? "battery-critical" : "battery"}"}"
            :timeout "128s"
            :onclick "bin/open_battery_popup.sh"
                "${battery.charging ? (icons_charging[(battery.perc - battery.perc % 10)/10]) : (icons_discharging[(battery.perc - battery.perc % 10)/10])}    ${battery.perc}%"


        )
)
)

(defwindow battery_popup 
        :monitor 0
        :geometry (geometry :x 0
                            :y 0
                            :width 0
                            :height 0
                            :anchor "top right"
                    )
        :stacking "overlay"
        :namespace "eww_popup"
    (battery_progress)
)

(defwidget battery_progress []
    (box :space-evenly false :halign "center" :valign "center"
        (box :orientation "v" :class "popup_box" :space-evenly false
            (box :class "padding_box"
                (circular-progress :class "battery-circle-${battery.perc < 10 ? "critical" : 
                                                            (battery.perc < 40 ? "low" : 
                                                            (battery.perc < 80 ? "medium" : "high"))}"
                                    :value "${battery.perc}"
                                    :thickness 8
                    (label :text "${battery.charging ? (icons_charging[(battery.perc - battery.perc % 10)/10]) : (icons_discharging[(battery.perc - battery.perc % 10)/10])}" 
                    )
                )
            )
            (box :class "popup_footer" :orientation "v"
                (label :class "text" :text "${battery.charging ? "Charging" : "Discharging"} at ${battery.watts/1000000}W")
                (label :class "text" :text "${formattime(round((battery.remaining / battery.watts * 3600),0),"%H:%M","UTC")} ${battery.charging ? "until full" : "until empty"}")
            )
        )
    )
)
